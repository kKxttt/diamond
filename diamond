function Hop()
    print("Hop server")
    wait(1)
    local tele = game:GetService("TeleportService")
    tele:Teleport(game.PlaceId)
end


function FastAttack()

    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Workspace = game:GetService("Workspace")
    local success, err = pcall(function()
        ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterAttack"):FireServer(0.5)
    end)
    if not success then return end

    local enemiesFolder = Workspace:FindFirstChild("Enemies")
    if not enemiesFolder then return end

    for _, enemy in ipairs(enemiesFolder:GetChildren()) do
        if enemy:IsA("Model") and enemy:FindFirstChild("Head") then

            local head = enemy:FindFirstChild("Head")
            if head then

                pcall(function()
                    head:SetAttribute("Hidden", true)
                end)
            end


            success, err = pcall(function()
                ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterHit"):FireServer(enemy.Head)
            end)
            if not success then return end
        end
    end
end

function FastAttack_Players()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Workspace = game:GetService("Workspace")

    local success, err = pcall(function()
        ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterAttack"):FireServer(0.5)
    end)
    if not success then return end

    local enemiesFolder = Workspace:FindFirstChild("Characters")
    if not enemiesFolder then return end

    for _, enemy in ipairs(enemiesFolder:GetChildren()) do
        if enemy:IsA("Model") and enemy:FindFirstChild("Head") then
            local head = enemy:FindFirstChild("Head")
            if head then
                pcall(function()
                    head:SetAttribute("Hidden", true)
                end)
            end

            success, err = pcall(function()
                ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE/RegisterHit"):FireServer(enemy.Head)
            end)
            if not success then return end
        end
    end
end

function TP(Pos)
    local xps = game.Players.LocalPlayer and game.Players.LocalPlayer.Character.HumanoidRootPart and game.Players.LocalPlayer.Character.HumanoidRootPart.Position
    if xps then
        local Distance = (Pos.Position - xps).Magnitude
        local success = false
        local player = game.Players.LocalPlayer
        local character = player.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")

        local Check_Tween = game.Players.LocalPlayer.Character:FindFirstChild("Tween")
        if  Check_Tween then
            Check_Tween:Destroy()
        end

        local part = Instance.new("Part", character)
        part.Name = "Tween"
        part.Transparency = 1
        part.Size = Vector3.new(5, 2, 5)
        part.Anchored = true
        part.CFrame = rootPart.CFrame * CFrame.new(0, -5, 0)

        local Tween = game:GetService("TweenService"):Create(
            rootPart,
            TweenInfo.new(Distance / 300, Enum.EasingStyle.Linear),
            { CFrame = Pos }
        )
        local partTween = game:GetService("TweenService"):Create(
            part,
            TweenInfo.new(Distance / 300, Enum.EasingStyle.Linear),
            { CFrame = Pos * CFrame.new(0, -5, 0) }
        )
        Tween:Play()
        partTween:Play()

        Tween.Completed:Wait()
        part:Destroy()

        local pla = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        if (Pos.Position - pla.Position).Magnitude <= 5 then
            success = true
        end

        if Distance <= 300 then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Pos
            success = true
        end

        return success
    end
    return false
end


function Check_game()
    while true do
        task.wait(1)
        local map = game.PlaceId
        if map == 2753915549 or map == 7449423635 then
            print(map)
            print("Teleport world 2")
            wait(1)
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("SetTeam", "Marines")
            wait(3)
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
        elseif map == 4442272183 then
            print("World 2")
            wait(5)
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("SetTeam", "Pirates")
            break
        end
    end
end

function Check_brain()
    local data = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("getTitles")

    for i, v in pairs(data) do
        if v.Index == 73 and v.Name ~= "(LOCKED)" then
            return true
        end
    end
    return false
end

function race_cy()
    wait(1)
    print("Start..")
    Total_chest = 0
    print(Check_brain())
    _G.Auto_Chest = true
    while _G.Auto_Chest do
        task.wait(0.03)


        if Check_brain() == true then
            print("Check")
            break
        end
        chest_table = {}
        wait(1)

        for i, Chest_6 in pairs(workspace.Map.IceCastle.Detail:GetDescendants()) do
            if Chest_6.Name == "Chest1" or Chest_6.Name == "Chest2" or Chest_6.Name == "Chest3" then
                table.insert(chest_table, Chest_6)
            end
        end

        for i, Chest_1 in pairs(workspace.Map.DarkbeardArena.Chests:GetDescendants()) do
            if Chest_1.Name == "Chest1" or Chest_1.Name == "Chest2" or Chest_1.Name == "Chest3" then
                table.insert(chest_table, Chest_1)
            end
        end

        for i, Chest_4 in pairs(workspace.Map.SnowMountain:GetDescendants()) do
            if Chest_4.Name == "Chest1" or Chest_4.Name == "Chest2" or Chest_4.Name == "Chest3" then
                table.insert(chest_table, Chest_4)
            end
        end

        for i, Chest_3 in pairs(workspace.Map.GreenBit:GetDescendants()) do
            if Chest_3.Name == "Chest1" or Chest_3.Name == "Chest2" or Chest_3.Name == "Chest3" then
                table.insert(chest_table, Chest_3)
            end
        end

        for i, v in pairs(workspace.Map.Dressrosa.Detail:GetChildren()) do
            if v.Name == "Chest1" or v.Name == "Chest2" or v.Name == "Chest3" then
                table.insert(chest_table, v)
            end
        end

        for _, item in pairs(chest_table) do
            local success, error = pcall(function()
                if item.TouchInterest then
                    pos_chest = item.CFrame
                    local pla = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    result_Chest = (pos_chest.Position - pla.Position).Magnitude
                end
            end)
            if not success then
            end
        end

        local Check_item = game.Players.LocalPlayer.Backpack:FindFirstChild("Fist of Darkness")


        if Check_item then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild(
            "Fist of Darkness"))
            wait(2)
            local la = workspace.Map.CircleIsland.RaidSummon.Button.Main
            local button_la = la:FindFirstChild("ClickDetector")
            fireclickdetector(button_la)
            Check_Drakfragment = true
            print(Check_Drakfragment)
            break
        end

        local success, error = pcall(function()
            if Total_chest >= 50 then
                Hop()
            elseif result_Chest < 10000000000000000000 then
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Space, false,
                    game.Players.LocalPlayer.Character.HumanoidRootPart)
                if next(chest_table) == nil then
                    print('nil')
                else
                    if TP(pos_chest) then
                        Total_chest += 1
                        print(Total_chest)
                    end
                end
            else
                print("No chest")
            end
        end)

        if error then
            print("Chest error")
        end
    end
end

function Cyborg()
    local Check_Player_Cyborg = game.Players.LocalPlayer.Data.Race.Value
    local Check_microchilp = game.Players.LocalPlayer.Backpack:FindFirstChild("Microchip")

    print("Farm Order")
    if not (Check_Player_Cyborg == "Cyborg") then
        wait(2)
        local la = workspace.Map.CircleIsland.RaidSummon.Button.Main
        local button_la = la:FindFirstChild("ClickDetector")
        fireclickdetector(button_la, 1)

        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("CyborgTrainer", "Buy")

        wait(1)
        if Check_microchilp then
            fireclickdetector(button_la, 1)
        else
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BlackbeardReward", "Microchip", "2")
            fireclickdetector(button_la, 1)
        end

        wait(1)

        local buy_1 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuySharkmanKarate")
        local buy_2 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuySanguineArt")
        wait(3)

        _G.Auto_boos_law = true
        while _G.Auto_boos_law do
            task.wait(0.01)
            local s, e = pcall(function()
                local Check_boss_nil = workspace.Enemies:FindFirstChild("Order")
                local Check_cobrain = game.Players.LocalPlayer.Backpack:FindFirstChild("Core Brain")
                local Tp_Cobrain = CFrame.new(-5569.00391, 332.44873, -5964.40576, -0.462504774, 2.99068716e-08,-0.886616826, 3.37104318e-08, 1, 1.61463607e-08, 0.886616826, -2.24204673e-08, -0.462504774)
                local item = game.Players.LocalPlayer.Backpack:FindFirstChild("Sharkman Karate") or game.Players.LocalPlayer.Backpack:FindFirstChild("Sanguine Art")
                local Check_pla = game.Players.LocalPlayer.Data.Race.Value
                local tool = game.Players.LocalPlayer.Backpack:findFirstChild('Tool')

                if Check_pla == "Cyborg" then
                    print(Check_pla)
                    EvoV2()
                    _G.Auto_boos_law = false
                end

                game.Players.LocalPlayer.Character.Humanoid:EquipTool(item)
                if Check_cobrain then
                    print("Core brain")
                    wait(1)
                    _G.Auto_boos_law = false
                    TP(Tp_Cobrain)
                    wait(7)
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
                    wait(1)
                    fireclickdetector(button_la, 1)
                    wait(1)
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("CyborgTrainer", "Buy")
                end

                if Check_boss_nil == nil then
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BlackbeardReward", "Microchip", "2")
                    fireclickdetector(button_la, 1)
                    print("Buy chip boss nil")
                    wait(0.5)
                end

                local newboss = Check_boss_nil.HumanoidRootPart.Position + Vector3.new(0, 40, 0)
                local pla_health = game.Players.LocalPlayer.Character.Humanoid.Health
                local pla_safezone = Check_boss_nil.HumanoidRootPart.Position + Vector3.new(0, 200, 0)

                if pla_health <= 4000 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pla_safezone)
                else
                    if Check_boss_nil then
                        workspace.Enemies.Order:WaitForChild("Humanoid").WalkSpeed = 0
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(newboss)
                        FastAttack()
                    else
                        TP(CFrame.new(-6209.47314, 16.2350807, -5007.79932, 0.394124091, 7.57696625e-08, 0.91905725,
                            -4.44191279e-08, 1, -6.33943245e-08, -0.91905725, -1.58384879e-08, 0.394124091))
                    end
                end
            end)
            if not s then
                print('Error: '..e)
            end
        end
    else
        print(Check_Player_Cyborg .. " V1")
    end
end

function EvoV2()
    local Check_race1 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(
    "Wenlocktoad", "2")

    if not Check_race1 then
        print(game.Players.LocalPlayer.Data.Race.Value .. " V1")
        wait(1)
        print("Start..")
        _G.Quests_Race = true
        while _G.Quests_Race do
            task.wait(0.01)
            local Quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Alchemist", "2")

            local time = game.Lighting.ClockTime
            local blue = workspace.Flower1.CFrame
            local red = workspace.Flower2.CFrame
            print(time)

            local Check_item1 = game.Players.LocalPlayer.Backpack:FindFirstChild("Flower 1")
            local Check_item2 = game.Players.LocalPlayer.Backpack:FindFirstChild("Flower 2")

            mon_fully = CFrame.new(-5721.87598, 48.5151329, -698.778503, -0.999943256, 1.60518994e-08, 0.010651866,
                1.51032005e-08, 1, -8.91445779e-08, -0.010651866, -8.89786449e-08, -0.999943256)

            if not Check_item1 then
                print("Tp blue")
                TP(blue)
            elseif not Check_item2 then
                print("Tp red")
                TP(red)
            elseif Check_item1 and Check_item2 then
                print("Tp mon")
                TP(CFrame.new(-5752.43994, 48.5151329, -701.963379, -0.99999845, 7.51804095e-08, 0.00176360284,
                    7.50056657e-08, 1, -9.91481457e-08, -0.00176360284, -9.90157147e-08, -0.99999845))
                _G.Quests_Race = false
            end

            wait(1)

            if Check_item1 and Check_item2 then
                wait(1)

                local buy_1 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuySharkmanKarate")
                local buy_2 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuySanguineArt")
                print("Buy melee")

                wait(1)

                local item = game.Players.LocalPlayer.Backpack:FindFirstChild("Sharkman Karate") or
                game.Players.LocalPlayer.Backpack:FindFirstChild("Sanguine Art")
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(item)

                wait(1)

                local Check_item3 = game.Players.LocalPlayer.Backpack:FindFirstChild("Flower 3")

                success_quesT = false
                if Check_item3 then
                    wait(1)
                    local buy_quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Alchemist", "3")
                    print("buy quests3")
                    print(game.Players.LocalPlayer.Data.Race.Value .. " 2")
                    _G.Quests_Race = false
                    break
                end

                _G.Auto_mon = true

                while _G.Auto_mon do

                    local Flower3 = game.Players.LocalPlayer.Backpack:FindFirstChild("Flower 3")

                    if Flower3 then
                        print("Flower3")
                        local buy_quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Alchemist", "3")
                        print("Buy Quest")
                        _G.Auto_mon = false
                    end
                    
                    task.wait(0.03)
                    local s, e = pcall(function()
                        local mon_zombie = nil
                        local mon_vampire = nil
                        local pla = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

                        for i, v in pairs(workspace.Enemies:GetChildren()) do
                            if v.Name == "Zombie" and v.Humanoid.Health > 0 then
                                mon_zombie = v.HumanoidRootPart.CFrame
                            end

                            if v.Name == "Vampire" and v.Humanoid.Health > 0 then
                                mon_vampire = v.HumanoidRootPart.CFrame
                            end
                        end

                        if mon_zombie then
                            TP(mon_zombie + Vector3.new(20, 0, 0))
                            for _, part in ipairs(workspace.Characters:GetDescendants()) do
                                if part:IsA("BasePart") then
                                    part.CanCollide = false
                                end
                            end
                            print("zombie")
                        elseif mon_vampire then
                            TP(mon_vampire + Vector3.new(20, 0, 0))
                            for _, part in ipairs(workspace.Characters:GetDescendants()) do
                                if part:IsA("BasePart") then
                                    part.CanCollide = false
                                end
                            end
                            print("vampire")
                        else
                            TP(CFrame.new(-5767.59668, 61.9101562, -939.306763, 0.16850771, -1.90279117e-08, -0.985700309, 3.6792926e-08, 1, -1.30141169e-08, 0.985700309, -3.40738175e-08, 0.16850771))
                        end

                        FastAttack()
                    end)
                end
            end
        end
    else
        print(game.Players.LocalPlayer.Data.Race.Value .. " V2")
    end
end

function Evov3_Cyborg()
    local Check_race1 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "2")

    if Check_race1 then
        while true do
            wait(2)
            local Quests3 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "2")
            wait(1)

            local fruits = {
                ["Rocket-Rocket"] = 5000,
                ["Spin-Spin"] = 7500,
                ["Blade-Blade"] = 30000,
                ["Spring-Spring"] = 60000,
                ["Bomb-Bomb"] = 80000,
                ["Smoke-Smoke"] = 250000,
                ["Spike-Spike"] = 180000,
                ["Flame-Flame"] = 250000,
                ["Falcon-Falcon"] = 650000,
                ["Ice-Ice"] = 350000,
                ["Sand-Sand"] = 420000,
                ["Dark-Dark"] = 950000,
                ["Diamond-Diamond"] = 1000000,
                ["Light-Light"] = 650000,
                ["Rubber-Rubber"] = 750000,
                ["Barrier-Barrier"] = 1250000,
                ["Ghost-Ghost"] = 940000,
                ["Magma-Magma"] = 960000,
                ["Quake-Quake"] = 1500000,
                ["Buddha-Buddha"] = 1200000,
                ["Love-Love"] = 1300000,
                ["Spider-Spider"] = 1500000,
                ["Sound-Sound"] = 1700000,
                ["Phoenix-Phoenix"] = 1800000,
                ["Portal-Portal"] = 1900000,
                ["Rumble-Rumble"] = 2100000,
                ["Pain-Pain"] = 2300000,
                ["Blizzard-Blizzard"] = 2400000,
                ["Gravity-Gravity"] = 2500000,
                ["Mammoth-Mammoth"] = 2700000,
                ["T-Rex-T-Rex"] = 2700000,
                ["Dough-Dough"] = 2800000,
                ["Shadow-Shadow"] = 2900000,
                ["Venom-Venom"] = 2450000,
                ["Control-Control"] = 3200000,
                ["Gas-Gas"] = 3200000,
                ["Spirit-Spirit"] = 3400000,
                ["Dragon-Dragon"] = 3500000,
                ["Leopard-Leopard"] = 3000000,
                ["Kitsune-Kitsune"] = 4000000,
                ["Dragon-Dragon (Legendary)"] = 15000000
            }

            print("----")

            local total_fruit = 0
            local table_fruit = {}
            for Name, price in pairs(fruits) do
                if price <= 2000000 then
                    total_fruit = total_fruit + 1
                    table.insert(table_fruit, Name)
                end
            end

            if table_fruit then
                ran = table_fruit[math.random(1, #table_fruit)]
                print(ran)
            end

            local pla = game.Players.LocalPlayer.Data.Race.Value
            if (pla == "Cyborg") then
                print(pla .. " V3")
                break
            end
            local pull_fruits = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("LoadFruit", ran)
            wait(3)
            local buy_quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "3")
        end
    else
        print("Race v1")
    end
end

function Re_race()
    _G.Auto_Rerace = true
    _G.Auto_Re = ""
    if _G.Race_Player == "Skypiea" then
        _G.Auto_Re = "Skypiea"
    elseif _G.Race_Player == "Fishman" then
        _G.Auto_Re = "Fishman"
    elseif _G.Race_Player == "Mink" then
        _G.Auto_Re = "Mink"
    elseif _G.Race_Player == "Human" then
        _G.Auto_Re = "Human"
    else
        print("No race")
    end

    while _G.Auto_Rerace do
        wait(1)
        local Race_pla = game.Players.LocalPlayer.Data.Race.Value
        if Race_pla == _G.Auto_Re then
            print(Race_pla)
            _G.Auto_Rerace = false
        else
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(
            "BlackbeardReward", "Reroll", "2")
            print("RaRace")
        end
    end
end

function Evov3_Skypiea()
    print("Start Evo_V3")
    _G.Auto_Evosky = true

    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Buso")

    while _G.Auto_Evosky do
        task.wait(0.01)
        local Check_race2 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "2")
        local Total_pla = CFrame.new(-5427.8916, 48.915863, -679.041016, 0.0677431598, -3.46307516e-09, 0.997702777, 1.61057141e-08, 1, 2.37748488e-09, -0.997702777, 1.59076574e-08, 0.0677431598)
        local Check_Haki = game.Players.LocalPlayer.Character:FindFirstChild("HasBuso")
        local Name_helper = game.Players:FindFirstChild(_G.Setting_Name)
        local pla = game.Players.LocalPlayer

        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pla.Character.HumanoidRootPart.Position, Name_helper.Character.HumanoidRootPart.Position)
        if Check_Haki then
            if Check_Haki.Name == "Hasbuso" then end
        else
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Buso")
        end

        if Check_race2 then

            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("EnablePvp")

            TP(Total_pla)
            local buy_melee = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuySharkmanKarate")

            Equip()
            Send_key(Enum.KeyCode.Z)
            task.wait(0.01)
            Send_key(Enum.KeyCode.X)
            task.wait(0.01)
            Send_key(Enum.KeyCode.C)
            FastAttack_Players()

            TP(Total_pla)
            local buy_quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "3")
            local Check_V3 = game.Players.LocalPlayer.Backpack:FindFirstChild("Heavenly Blood")
            local Tp_Helper = CFrame.new(-5453.16162, 48.9150505, -667.497192, -0.415608078, -1.57564219e-08, 0.909543812, -6.62925288e-08, 1, -1.29683588e-08, -0.909543812, -6.56857182e-08, -0.415608078)

            if Check_V3 then
                if pla ~= Name_helper then
                    TP(Total_pla)
                    _G.Auto_Evosky = false
                else
                    _G.Auto_Evosky = false
                    TP(Tp_Helper)
                    _G.Helper = true
                    while _G.Helper do
                        TP(Tp_Helper)
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("EnablePvp")
                    end
                end
                
            end
        else
            print(game.Players.LocalPlayer.Data.Race.Value .. "V1")
            break
        end
    end
end

function Equip()
    local pla = game.Players.LocalPlayer.Backpack:GetChildren()
    local item1 = "Melee"
    local item2 = "Blox Fruit"
    local item3 = "Sword"
    local item4 = "Gun"
    for i, v in pairs(pla) do
        if v.ToolTip == item1 then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool((v))
        end
        if v.ToolTip == item2 then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool((v))
        end
        if v.ToolTip == item3 then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool((v))
        end
        if v.ToolTip == item4 then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool((v))
        end
    end
end

function Send_key(Key)
    local Vitual = game:GetService("VirtualInputManager")
    Vitual:SendKeyEvent(true, Key, false, game.Players.LocalPlayer.Character.Humanoid)
    task.wait(0.03)
    Vitual:SendKeyEvent(false, Key, false, game.Players.LocalPlayer.Character.Humanoid)
end

function boat()
    local Shell_boat = CFrame.new(92.7309341, 10.7115955, 2948.79517, -0.818358779, -2.51148453e-08, -0.574707687,
        2.93337994e-08, 1, -8.5470262e-08, 0.574707687, -8.6803702e-08, -0.818358779)
    TP(Shell_boat)
    if TP(Shell_boat) then
        local buy_boat = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuyBoat", "Guardian")
        if buy_boat then
            local boat_now = workspace.Boats:FindFirstChild("Guardian")
            if boat_now then
                boat_now.Name = game.Players.LocalPlayer.Name
                local find_boat = workspace.Boats:FindFirstChild(game.Players.LocalPlayer.Name)
                if find_boat then
                    wait(1)
                    local pos_new = Vector3.new(38.8103141784668, 24.21470069885254, 3961.016845703125)
                    find_boat:SetPrimaryPartCFrame(CFrame.new(pos_new))
                    CFrame_boat = find_boat.VehicleSeat.CFrame
                    TP(CFrame_boat)
                end
            end
        end
    end
end

function Evov3_Shark()
    local Check_race1 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "2")
    if Check_race1 then
        game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Space, false,
            game.Players.LocalPlayer.Character.Humanoid)
        wait(0.1)
        game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.Space, false,
            game.Players.LocalPlayer.Character.Humanoid)
        boat()

        _G.Auto_Drive = true
        while _G.Auto_Drive do
            local s, E = pcall(function()
            local pla = game.Players.LocalPlayer
            local Check_boat = workspace:WaitForChild("Boats"):FindFirstChild(game.Players.LocalPlayer.Name)
            local boat_p = workspace.Enemies:FindFirstChild("PirateBrigade")
            local Sea = workspace.SeaBeasts:FindFirstChild("SeaBeast1")
            if Sea then

                print("S")
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Space, false,
                    game.Players.LocalPlayer.Character.Humanoid)
                wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.Space, false,
                    game.Players.LocalPlayer.Character.Humanoid)

                local New_sea = Sea:WaitForChild("HumanoidRootPart").Position + Vector3.new(10, 600, 10)
                local Health = game.Players.LocalPlayer.Character.Humanoid.Health
                local Character = pla.Character:WaitForChild("HumanoidRootPart")
                pla.Character.HumanoidRootPart.CFrame = CFrame.new(New_sea)

                local new_pla = pla.Character.HumanoidRootPart.Position + Vector3.new(0, 500, 0)
                _G.Auto_Drive = false
                _G.Auto_Sea = true
                while _G.Auto_Sea do
                    
                    local Sea_Farm = workspace.SeaBeasts:FindFirstChild("SeaBeast1")
                    if Sea_Farm then

                        print("S")

                        TP(CFrame.new(new_pla))
                        pla.Character.HumanoidRootPart.CFrame = CFrame.new(pla.Character.HumanoidRootPart.Position, Sea.HumanoidRootPart.Position)
                        Equip()
                        Send_key(Enum.KeyCode.Z)
                        task.wait(0.01)
                        Send_key(Enum.KeyCode.X)
                        task.wait(0.01)
                        Send_key(Enum.KeyCode.C)

                    elseif not Sea_Farm then
                        local Tp_success = CFrame.new(38.7314415, 14.3116798, 2874.74854, 0.995648265, 9.45078966e-08, 0.0931905583, -9.01771173e-08, 1, -5.06833011e-08, -0.0931905583, 4.20590851e-08, 0.995648265)
                        if TP(Tp_success) then
                            local buy = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "3")
                            _G.Auto_Sea = false
                        end
                    end
                end

            elseif Check_boat.Humanoid.Value <= 300 then
                print("health low")
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Space, false,
                    game.Players.LocalPlayer.Character.Humanoid)
                wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.Space, false,
                    game.Players.LocalPlayer.Character.Humanoid)
                boat()
            elseif boat_p then
                print("boat p")
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Space, false,
                    game.Players.LocalPlayer.Character.Humanoid)
                wait(0.1)
                game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.Space, false,
                    game.Players.LocalPlayer.Character.Humanoid)
                boat()
            elseif Check_boat or not Sea then
                print("Boat")
                TP(CFrame_boat)
            else
                print("e")
            end
            end)
        end
    else
        print("Race V1")
    end
end

function Evov3_Mink()
    wait(1)
    print("Start..")
    Total_chest = 0
    _G.Auto_Chest = true
    while _G.Auto_Chest do
        task.wait(0.03)

        chest_table = {}
        wait(1)

        for i, Chest_3 in pairs(workspace.Map.IceCastle.Detail:GetDescendants()) do
            table.insert(chest_table, Chest_3)
        end

        for i, Chest_1 in pairs(workspace.Map.DarkbeardArena.Chests:GetDescendants()) do
            table.insert(chest_table, Chest_1)
        end

        for i, Chest_4 in pairs(workspace.Map.SnowMountain:GetDescendants()) do
            table.insert(chest_table, Chest_4)
        end

        for i, Chest_3 in pairs(workspace.Map.GreenBit:GetDescendants()) do
            table.insert(chest_table, Chest_3)
        end

        for i, v in pairs(workspace.Map.Dressrosa.Detail:GetChildren()) do
            table.insert(chest_table, v)
        end

        for _, item in pairs(chest_table) do
            if item.Name == "Chest1" or item.Name == "Chest2" or item.Name == "Chest3" then
            end

            if item.Name == "TouchInterest" then
                pos_chest = item.Parent.CFrame
                local pla = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                result_Chest = (pos_chest.Position - pla.Position).Magnitude
            end
        end

        local success, error = pcall(function()
            if Total_chest == 20 then
                wait(1)
                local buy_quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "3")
                print("buy")
                _G.Auto_Chest = false
            elseif pos_chest then
                game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Space, false,game.Players.LocalPlayer.Character.HumanoidRootPart)
                if TP(pos_chest) then
                    Total_chest = Total_chest + 1
                    print(Total_chest)
                end
            end
        end)

        if error then
            print("Chest error")
        end
    end
end

function Equip_item()
    local pla = game.Players.LocalPlayer.Backpack:GetChildren()
    _G.Item = "Melee"
    for i, v in pairs(pla) do
        if v.ToolTip == _G.Item then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
        end
    end
end

function Evov3_Human()
    _G.Auto_Human = true
    _G.Check3 = nil
    _G.Check1 = nil
    _G.Check2 = nil

    while _G.Auto_Human do
        task.wait(0.01)
        local s, e = pcall(function()
        local Boss_Quest1 = workspace.Enemies:FindFirstChild("Jeremy")
        local Boss_Quest2 = workspace.Enemies:FindFirstChild("Diamond")
        local Boss_Quest3 = workspace.Enemies:FindFirstChild("Fajita")
        local pla = game.Players.LocalPlayer


        Equip_item()
        if _G.Check1 == nil and _G.Check2 == nil and _G.Check3 == nil then
            local Jeremy = TP(CFrame.new(2188.8606, 448.965912, 644.750916, -0.251834452, -1.61556257e-09, -0.967770338, -3.66658842e-10, 1, -1.5739533e-09, 0.967770338, -4.15341095e-11, -0.251834452))
            if Jeremy then
                if Boss_Quest1 then
                    local Frame1 = Boss_Quest1.HumanoidRootPart.Position
                    TP(CFrame.new(Frame1))
                    wait(0.3)
                    _G.Auto_Jeremy = true
                    while _G.Auto_Jeremy do
                        local Check_Haki = game.Players.LocalPlayer.Character:FindFirstChild("HasBuso")
                        if Check_Haki then
                            if Check_Haki.Name == "Hasbuso" then end
                        else
                            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Buso")
                        end

                        task.wait(0.01)
                        local Boss_Quest_Jeremy = workspace.Enemies:FindFirstChild("Jeremy")
                        if not Boss_Quest_Jeremy then
                            _G.Auto_Jeremy = false
                            _G.Check1 = true
                            print(_G.Check1, _G.Check2, _G.Check3)
                        end
                        local Frame_new1 = Boss_Quest_Jeremy.HumanoidRootPart.Position + Vector3.new(0, 15, 0)
                        pla.Character.HumanoidRootPart.CFrame = CFrame.new(Frame_new1)
                        FastAttack()
                    end
                end
            end
        elseif _G.Check1 == true and _G.Check2 == nil and _G.Check3 == nil then
            local Diamond = TP(CFrame.new(-1752.64685, 461.704346, -68.1983032, 0.640415132, -8.49733894e-10, -0.768028915, -2.14695905e-08, 1, -1.900864e-08, 0.768028915, 2.86626882e-08, 0.640415132))
            if Diamond then
                if Boss_Quest2 then
                    local Frame2 = Boss_Quest2.HumanoidRootPart.Position
                    TP(CFrame.new(Frame2))
                    wait(0.3)
                    _G.Auto_Diamond = true
                    while _G.Auto_Diamond do
                        local Check_Haki = game.Players.LocalPlayer.Character:FindFirstChild("HasBuso")
                        if Check_Haki then
                            if Check_Haki.Name == "Hasbuso" then end
                        else
                            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Buso")
                        end

                        task.wait(0.01)
                        local Boss_Quest_Diamond = workspace.Enemies:FindFirstChild("Diamond")
                        if not Boss_Quest_Diamond then
                            _G.Auto_Diamond = false
                            _G.Check2 = true
                            print(_G.Check1, _G.Check2, _G.Cgeck3)
                        end
                        local Frame_new2 = Boss_Quest_Diamond.HumanoidRootPart.Position + Vector3.new(0, 15, 0)
                        pla.Character.HumanoidRootPart.CFrame = CFrame.new(Frame_new2)
                        FastAttack()
                    end
                end
            end
        elseif _G.Check1 == true and _G.Check2 == true and _G.Check3 == nil then
            local Futaji = TP(CFrame.new(-2462.1709, 246.186966, -4135.43018, -0.471160263, -3.31456285e-08, -0.882047653, -1.16514464e-07, 1, 2.46600695e-08, 0.882047653, 1.14390147e-07, -0.471160263))
            if Futaji then
                if Boss_Quest3 then
                    local Frame3 = Boss_Quest3.HumanoidRootPart.Position
                    TP(CFrame.new(Frame3))
                    wait(0.3)
                    _G.Auto_Fuji = true
                    while _G.Auto_Fuji do
                        local Check_Haki = game.Players.LocalPlayer.Character:FindFirstChild("HasBuso")
                        if Check_Haki then
                            if Check_Haki.Name == "Hasbuso" then end
                        else
                            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Buso")
                        end

                        task.wait(0.01)
                        local Boss_Quest_Fuji = workspace.Enemies:FindFirstChild("Fajita")
                        if not Boss_Quest_Fuji then
                            _G.Check3 = true
                            print(_G.Check1, _G.Check2, _G.Check3)
                            TP(CFrame.new(-2796.97729, 73.1128464, -3582.00977, -0.552790999, 1.11956801e-07, -0.833319962, 1.91990015e-08, 1, 1.21614477e-07, 0.833319962, 5.12284757e-08, -0.552790999))
                            wait(3)
                            local buy_quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "3")
                            print("buy")
                            _G.Auto_Fuji = false
                        else
                            print("r")
                            Boss_Quest_Fuji.HumanoidRootPart.CFrame = CFrame.new(-2110.48828, 73.0011444, -4129.34619, -0.789669931, 3.54596565e-08, 0.613531947, -1.63465863e-08, 1, -7.88354484e-08, -0.613531947, -7.22831288e-08, -0.789669931)
                            Boss_Quest_Fuji.Humanoid.WalkSpeed = 0
                            local Frame_new3 = Boss_Quest_Fuji.HumanoidRootPart.Position + Vector3.new(0, 15, 0)
                            pla.Character.HumanoidRootPart.CFrame = CFrame.new(Frame_new3)
                            FastAttack()
                        end
                    end
                end
            end
        end
        end)
    end
end

function Evov3_Ghoul()
    local Check_Race_Ghoul = game.Players.LocalPlayer.Data.Race.Value
    if Check_Race_Ghoul == "Ghoul" then
        _G.Auto_Evoghoul = true
        while _G.Auto_Evoghoul do
            task.wait(0.01)
            local Check_race2 = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "2")
            local Total_pla = CFrame.new(-5427.8916, 48.915863, -679.041016, 0.0677431598, -3.46307516e-09, 0.997702777, 1.61057141e-08, 1, 2.37748488e-09, -0.997702777, 1.59076574e-08, 0.0677431598)
            local Check_Haki = game.Players.LocalPlayer.Character:FindFirstChild("HasBuso")
            local Name_helper = game.Players:FindFirstChild(_G.Setting_Name_Ghoul)
            local pla = game.Players.LocalPlayer

            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pla.Character.HumanoidRootPart.Position, Name_helper.Character.HumanoidRootPart.Position)
            if Check_Haki then
                if Check_Haki.Name == "Hasbuso" then end
            else
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Buso")
            end

            if Check_race2 then

                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("EnablePvp")

                TP(Total_pla)
                local buy_melee = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("BuySharkmanKarate")

                workspace.Camera.CFrame = CFrame.new(workspace.Camera.CFrame.Position, Name_helper.Character.HumanoidRootPart.Position)
                Equip()
                Send_key(Enum.KeyCode.Z)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pla.Character.HumanoidRootPart.Position, Name_helper.Character.HumanoidRootPart.Position)
                task.wait(0.01)
                Send_key(Enum.KeyCode.X)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pla.Character.HumanoidRootPart.Position, Name_helper.Character.HumanoidRootPart.Position)
                task.wait(0.01)
                Send_key(Enum.KeyCode.C)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pla.Character.HumanoidRootPart.Position, Name_helper.Character.HumanoidRootPart.Position)
                FastAttack_Players()

                TP(Total_pla)
                local buy_quests = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("Wenlocktoad", "3")
                local Check_V3 = game.Players.LocalPlayer.Backpack:FindFirstChild("Heightened Senses")
                local Tp_Helper = CFrame.new(-5453.16162, 48.9150505, -667.497192, -0.415608078, -1.57564219e-08, 0.909543812, -6.62925288e-08, 1, -1.29683588e-08, -0.909543812, -6.56857182e-08, -0.415608078)

                if Check_V3 then
                    _G.Auto_Evoghoul = false
                    _G.Helper = true
                    while _G.Helper do
                        TP(Tp_Helper)
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("EnablePvp")
                    end
                end
            else
                print(game.Players.LocalPlayer.Data.Race.Value .. "V1")
                break
            end
        end
    else
        print("No Ghoul")
    end
end

--[[
    Fishman
    Cyborg
    Skypiea
    Mink
    Human
    Ghoul
]]


_G.Race_Player = ""
_G.Setting_Name = ""  --for skypiea
_G.Setting_Name_Ghoul = ""   --for ghoul


if _G.Race_Player == "Cyborg" then
    print("Start Cyborg")
    Check_game()
    race_cy()
    Cyborg()
    EvoV2()
    Evov3_Cyborg()
elseif _G.Race_Player == "Skypiea" then
    print("Start skypiea")
    Check_game()
    Re_race()
    EvoV2()
    Evov3_Skypiea()
elseif _G.Race_Player == "Fishman" then
    print("Start Fishman")
    Check_game()
    Re_race()
    EvoV2()
    Evov3_Shark()
elseif _G.Race_Player == "Mink" then
    print("Start Mink")
    Check_game()
    Re_race()
    EvoV2()
    Evov3_Mink()
elseif _G.Race_Player == "Human" then
    print("Start Human")
    Check_game()
    Re_race()
    EvoV2()
    Evov3_Human()
elseif _G.Race_Player == "Ghoul" then
    print("Start ghoul")
    Check_game()
    EvoV2()
    Evov3_Ghoul()
else
    print("Setting race")
end

